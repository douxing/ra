// Generated by CoffeeScript 1.7.1
var ra;

ra = angular.module('ra');

ra.controller('NavBarController', [
  '$scope', '$state', '$modal', function($scope, $state, $modal) {
    $scope.addUser = function() {
      var modal;
      modal = $modal.open({
        templateUrl: '/tpls/user/new.html',
        controller: [
          '$scope', '$http', function($scope, $http) {
            $scope.user = {
              name: '',
              auth: {
                email: '',
                password: ''
              }
            };
            $scope.ok = function() {
              return $http.post('/users/add', $scope.user).success(function(data, status, headers, config) {
                var t;
                t = [data, status, headers, config];
                return modal.close('ok');
              }).error(function(data, status, headers, config) {
                var t;
                t = [data, status, headers, config];
                return modal.dismiss('error');
              });
            };
            return $scope.cancel = function() {
              return modal.dismiss('cancel');
            };
          }
        ],
        backdrop: 'static'
      });
      return modal.result.then(function() {
        return $state.transitionTo($state.current, {}, {
          reload: true,
          inherit: true,
          notify: true
        });
      }, function() {});
    };
    $scope.addMatchday = function() {
      var modal;
      modal = $modal.open({
        templateUrl: '/tpls/matchday/new.html',
        controller: [
          '$scope', '$http', function($scope, $http) {
            $scope.ok = function() {
              return $http.post('/matchdays/add', {}).success(function(data, status, headers, config) {
                var t;
                t = [data, status, headers, config];
                return modal.close('ok');
              }).error(function(data, status, headers, config) {
                var t;
                t = [data, status, headers, config];
                return modal.dismiss('error');
              });
            };
            return $scope.cancel = function() {
              return modal.dismiss('cancel');
            };
          }
        ],
        backdrop: 'static'
      });
      return modal.result.then(function() {
        return $state.transitionTo($state.current, {}, {
          reload: true,
          inherit: true,
          notify: true
        });
      }, function() {});
    };
    $scope.viewMatches = function(edit) {
      var manage;
      manage = edit ? 'manage' : null;
      return $state.go('matches', {
        manage: manage
      });
    };
    return $scope.viewLast12 = function() {
      return $state.go('last12');
    };
  }
]);

// Generated by CoffeeScript 1.7.1
var ra,
  __slice = [].slice;

ra = angular.module('ra', ['ui.bootstrap', 'ui.router', 'ngGrid']);

ra.config([
  "$stateProvider", "$urlRouterProvider", function($stateProvider, $urlRouterProvider) {
    var shiftTemplate;
    shiftTemplate = "<div class='container'><div class='jumbotron text-center'><p>Loading...</p></div></div>";
    $urlRouterProvider.otherwise("/");
    return $stateProvider.state('index', {
      url: '/',
      views: {
        'main': {
          template: shiftTemplate,
          controller: [
            '$state', '$window', function($state, $window) {
              return $window.setTimeout(function() {
                return $state.go('matches');
              }, 0);
            }
          ]
        }
      }
    }).state("matches", {
      url: "/matches/:manage",
      resolve: {
        users: [
          '$http', function($http) {
            return $http.get('/users').then(function(data) {
              return data.data;
            });
          }
        ],
        matchdays: [
          '$http', function($http) {
            return $http.get('/matchdays').then(function(data) {
              var days, matchday, obj, scoreDict, _i, _j, _len, _len1, _ref, _ref1;
              days = [];
              _ref = data.data;
              for (_i = 0, _len = _ref.length; _i < _len; _i++) {
                matchday = _ref[_i];
                scoreDict = {};
                _ref1 = matchday.scores;
                for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
                  obj = _ref1[_j];
                  scoreDict[obj.player] = obj;
                }
                matchday.scores = scoreDict;
                days[matchday.id] = matchday;
              }
              return days;
            });
          }
        ]
      },
      views: {
        'main': {
          templateUrl: '/tpls/match/list.html',
          controller: [
            '$rootScope', '$state', '$stateParams', 'users', 'matchdays', '$scope', '$http', '$window', function($rootScope, $state, $stateParams, users, matchdays, $scope, $http, $window) {
              var headerCellTemplate, matchday, originalScore, user, _i, _j, _k, _len, _len1, _len2;
              headerCellTemplate = "<div class=\"ngHeaderSortColumn {{col.headerClass}}\" ng-style=\"{'cursor': col.cursor}\" ng-class=\"{ 'ngSorted': !noSortVisible }\"><div ng-click=\"col.sort($event)\" ng-class=\"'colt' + col.index\" class=\"ngHeaderText\">{{col.displayName}}</div><div class=\"ngSortButtonDown\" ng-show=\"col.showSortButtonDown()\"></div><div class=\"ngSortButtonUp\" ng-show=\"col.showSortButtonUp()\"></div><div class=\"ngSortPriority\">{{col.sortPriority}}</div><div ng-class=\"{ ngPinnedIcon: col.pinned, ngUnPinnedIcon: !col.pinned }\" ng-click=\"togglePin(col)\" ng-show=\"false\"></div></div><div ng-show=\"col.resizable\" class=\"ngHeaderGrip\" ng-click=\"col.gripClick($event)\" ng-mousedown=\"col.gripOnMouseDown($event)\"></div>";
              $scope.matchListCapsule = {
                gridOptions: {
                  data: 'matchListCapsule.gridData',
                  enablePinning: true,
                  enableCellSelection: $stateParams.manage === 'manage',
                  enableRowSelection: false,
                  enableCellEdit: $stateParams.manage === 'manage',
                  columnDefs: [
                    {
                      field: 'player',
                      width: 110,
                      pinned: true,
                      enableCellEdit: false,
                      displayName: '球员/比赛日'
                    }
                  ]
                },
                gridData: []
              };
              for (_i = 0, _len = matchdays.length; _i < _len; _i++) {
                matchday = matchdays[_i];
                $scope.matchListCapsule.gridOptions.columnDefs.push({
                  field: "" + matchday.id,
                  displayName: "No." + (matchday.id + 1),
                  width: 80,
                  headerCellTemplate: headerCellTemplate
                });
              }
              for (_j = 0, _len1 = users.length; _j < _len1; _j++) {
                user = users[_j];
                user.matchday = {
                  player: user.name
                };
                for (_k = 0, _len2 = matchdays.length; _k < _len2; _k++) {
                  matchday = matchdays[_k];
                  user.matchday[matchday.id] = '';
                  if (matchday.scores[user._id] && matchday.scores[user._id].score) {
                    user.matchday[matchday.id] = matchday.scores[user._id].score;
                  } else {
                    user.matchday[matchday.id].score = '';
                  }
                }
                $scope.matchListCapsule.gridData.push(user.matchday);
              }
              originalScore = null;
              $scope.$on('ngGridEventStartCellEdit', function() {
                var args, event;
                event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
                console.log("EndCellEdit: " + event + ", " + args);
                return originalScore = $scope.matchListCapsule.gridData[event.targetScope.row.rowIndex][event.targetScope.col.field];
              });
              return $scope.$on('ngGridEventEndCellEdit', function() {
                var args, event, score;
                event = arguments[0], args = 2 <= arguments.length ? __slice.call(arguments, 1) : [];
                console.log("EndCellEdit: " + event + ", " + args);
                score = $scope.matchListCapsule.gridData[event.targetScope.row.rowIndex][event.targetScope.col.field];
                matchday = matchdays[event.targetScope.col.field];
                user = users[event.targetScope.row.rowIndex];
                return $http.post("/matchdays/" + matchday._id + "/update_score", {
                  player: user._id,
                  score: score
                }).success(function(data, status, headers, config) {
                  var t;
                  t = [data, status, headers, config];
                  matchday.scores[user._id] = data;
                  return $scope.matchListCapsule.gridData[event.targetScope.row.rowIndex][event.targetScope.col.field] = "" + data.score;
                }).error(function(data, status, headers, config) {
                  var t;
                  t = [data, status, headers, config];
                  return $scope.matchListCapsule.gridData[event.targetScope.row.rowIndex][event.targetScope.col.field] = originalScore;
                });
              });
            }
          ]
        }
      },
      auth: true
    }).state('last12', {
      url: '/last12',
      views: {
        'main': {
          templateUrl: '/tpls/match/last12.html',
          controller: [
            '$scope', function($scope) {
              return $scope;
            }
          ]
        }
      },
      auth: true
    });
  }
]);

ra.run([
  '$rootScope', '$location', function($rootScope, $location) {
    $rootScope.rootCapsule = {
      state_changing: false,
      edit: false
    };
    $rootScope.$on('$stateChangeStart', function(event, toState, toParams, fromState, fromParams) {
      var t;
      t = [event, toState, toParams, fromState, fromParams];
      return $rootScope.rootCapsule.state_changing = true;
    });
    $rootScope.$on('$stateChangeError', function(event, toState, toParams, fromState, fromParams) {
      var t;
      t = [event, toState, toParams, fromState, fromParams];
      return $rootScope.rootCapsule.state_changing = false;
    });
    $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
      var t;
      t = [event, toState, toParams, fromState, fromParams];
      return $rootScope.rootCapsule.state_changing = false;
    });
    return $rootScope.$on('$stateNotFound', function(event, toState, toParams, fromState, fromParams) {
      var t;
      t = [event, toState, toParams, fromState, fromParams];
      return $rootScope.rootCapsule.state_changing = false;
    });
  }
]);
